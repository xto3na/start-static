/*! normalize.css v3.0.2 | MIT License | git.io/normalize */img,legend{border:0}legend,td,th{padding:0}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0;opacity:0;outline:0;-ms-touch-action:none;touch-action:none}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:Ubuntu;src:url(../fonts/Ubuntu-R.ttf) format("truetype")}label{-ms-touch-action:none;touch-action:none}input[class^=custom-check__checkbox]+span[class^=custom-check__checkbox]>span[data-ripple=true]::before,span[data-ripple=true]::before{background-color:rgba(177,230,254,.9);border-radius:50%;content:'';display:block;height:100%;opacity:0;width:100%}input[class^=custom-check__checkbox]:checked+span[class^=custom-check__checkbox]>span[data-ripple=true]::before,input[class^=custom-check__checkbox]:checked+span[data-ripple=true]::before{-webkit-animation:ripple .4s ease .1s 1 normal forwards;animation:ripple .4s ease .1s 1 normal forwards}.custom-check{color:#727272;display:block;font-size:1.1rem;font-weight:400;height:1.2em;margin:.6em auto;position:relative;text-align:left;width:95%}.custom-check__checkbox,.custom-check__text{display:block;height:1.1em;left:0;position:absolute;top:0}.custom-check__checkbox{border-radius:.125em;box-sizing:border-box;width:1.1em}.custom-check__text{cursor:pointer;lineheight:1.1em;margin-top:-.02em;padding-left:1.7em;text-align:left}.switch-C__background,.switch-C__text{display:inline-block;position:relative}.check-C__background{background-color:#b1e6fe;border-radius:.125em;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.check-C:checked+.check-C__background{-webkit-animation:bouncing-item .5s ease-in-out 0s 1 normal forwards;animation:bouncing-item .5s ease-in-out 0s 1 normal forwards;background-color:#03a9f4;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}.check-C__checkbox{border:.125em solid #fff;border-radius:0;border-right:none;border-top:none;height:.33em;left:.22em;top:.3em;-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);width:.66em}.check-C:checked+.check-C__background+.check-C__checkbox{box-shadow:-1px 1px 1px rgba(0,0,0,.1)}.radio-C:checked+.radio-C__background,.switch-C__checkbox{box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}.radio-C__background{background-color:#fff;border:.125em solid #03a9f4;border-radius:50%;-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.radio-C:checked+.radio-C__background{background-color:#03a9f4}.radio-C__checkbox{border-radius:50%;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transition:all .3s ease-in;transition:all .3s ease-in}.radio-C:checked+.radio-C__background+.radio-C__checkbox{-webkit-animation:bouncing-item .5s ease-in-out .2s 1 normal forwards;animation:bouncing-item .5s ease-in-out .2s 1 normal forwards;background-color:#03a9f4;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.switch-C{margin:1em 0}.switch-C__text{margin-right:1.5em;padding:0}.switch-C__background{background-color:#d3d3d3;border:.0625em solid rgba(250,250,250,0);border-radius:999px;top:.15em;-webkit-transform:scale(1.4);-ms-transform:scale(1.4);transform:scale(1.4);-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;width:2.2em}.switch-C__checkbox{cursor:pointer;background-color:#f1f1f1;border-radius:50%;left:-2%;top:-.0625em;-webkit-transform:scale(.75);-ms-transform:scale(.75);transform:scale(.75);-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.switch-C:checked+.switch-C__background{background-color:#b1e6fe}.switch-C:checked+.switch-C__background>.switch-C__checkbox{background-color:#03a9f4;left:50%}@media screen and (max-width:30em){.custom-check{font-size:1.5rem}.switch-C__text{margin-right:1.1em}}@-webkit-keyframes ripple{0%{opacity:.5;-webkit-transform:scale(0);transform:scale(0)}25%{opacity:.7;-webkit-transform:scale(1.5);transform:scale(1.5)}50%{opacity:.8;-webkit-transform:scale(2.2);transform:scale(2.2)}60%{opacity:.7;-webkit-transform:scale(3);transform:scale(3)}70%{opacity:.5;-webkit-transform:scale(2);transform:scale(2)}100%{-webkit-transform:scale(0);transform:scale(0);opacity:0}}@keyframes ripple{0%{opacity:.5;-webkit-transform:scale(0);transform:scale(0)}25%{opacity:.7;-webkit-transform:scale(1.5);transform:scale(1.5)}50%{opacity:.8;-webkit-transform:scale(2.2);transform:scale(2.2)}60%{opacity:.7;-webkit-transform:scale(3);transform:scale(3)}70%{opacity:.5;-webkit-transform:scale(2);transform:scale(2)}100%{-webkit-transform:scale(0);transform:scale(0);opacity:0}}@-webkit-keyframes bouncing-item{10%,100%,50%,80%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scale(1.2);transform:scale(1.2)}70%{-webkit-transform:scale(1.1);transform:scale(1.1)}90%{-webkit-transform:scale(1.05);transform:scale(1.05)}}@keyframes bouncing-item{10%,100%,50%,80%{-webkit-transform:scale(1);transform:scale(1)}30%{-webkit-transform:scale(1.2);transform:scale(1.2)}70%{-webkit-transform:scale(1.1);transform:scale(1.1)}90%{-webkit-transform:scale(1.05);transform:scale(1.05)}}
/*# sourceMappingURL=data:application/json;base64, */
